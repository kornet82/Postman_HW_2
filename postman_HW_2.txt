HW_2 Postman

=============================================================================
http://162.55.220.72:5006/first
1. Отправить запрос.
2. Статус код 200
3. Проверить, что в body приходит правильный string. -- This is the first responce from server!

http://162.55.220.72:5006/user_info_3
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.    -- var jsonData = pm.response.json()
4. Проверить, что name в ответе равно name s request (name вбить руками.)
5. Проверить, что age в ответе равно age s request (age вбить руками.)
6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)

var jsonData = pm.response.json();
var resp_name = jsonData.name
var resp_age = jsonData.age
var resp_salary = jsonData.salary

/ console.log(jsonData)

pm.test("Name is correct", function () {
    pm.expect(resp_name).to.equal("Pavel");
});

pm.test("Age is correct", function () {
    pm.expect(resp_age).to.equal("41");
});

pm.test("Salary is correct", function () {
    pm.expect(resp_salary).to.equal(1000);
});
	
7. Спарсить request.    --  var req_json_Data = request.data;
8. Проверить, что name в ответе равно name s request (name забрать из request.)
9. Проверить, что age в ответе равно age s request (age забрать из request.)
10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)

var req_name = req_json_Data.name
var req_age = req_json_Data.age
var req_salary = req_json_Data.salary

pm.test("Name is correct - auto", function () {
    pm.expect(resp_name).to.equal(req_name);
});

pm.test("Age is correct - auto", function () {
    pm.expect(resp_age).to.equal(req_age);
});

pm.test("Salary is correct - auto", function () {
    pm.expect(resp_salary).to.equal(+req_salary);
});



11. Вывести в консоль параметр family из response.

var resp_family = resp_jsonData.family
console.log(resp_family)

12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)

var resp_salary_u_1_5 = resp_jsonData.family.u_salary_1_5_year
pm.test("Salary_u_1_5_year is correct - auto", function () {
    pm.expect(resp_salary_u_1_5).to.equal(+req_salary*4);
});

http://162.55.220.72:5006/object_info_3
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.  -- var resp_jsonData = pm.response.json();
4. Спарсить request.               -- var req_json_Data = request.url;
5. Проверить, что name в ответе равно name s request (name забрать из request.)
6. Проверить, что age в ответе равно age s request (age забрать из request.)
7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)

var resp_name = resp_jsonData.name
var resp_age = resp_jsonData.age
var resp_salary = resp_jsonData.salary
var req_name = pm.request.url.query.toObject().name
var req_age = pm.request.url.query.toObject().age
var req_salary = pm.request.url.query.toObject().salary


pm.test("Name is correct - auto", function () {
    pm.expect(resp_name).to.equal(req_name);
});

pm.test("Age is correct - auto", function () {
    pm.expect(resp_age).to.equal(req_age);
});

pm.test("Salary is correct - auto", function () {
    pm.expect(resp_salary).to.equal(+req_salary);
});

8. Вывести в консоль параметр family из response.   -- 

var resp_family = resp_jsonData.family
console.log(resp_family)

9. Проверить, что у параметра dog есть параметры name.

pm.test("Dog has a name", function () {
        pm.expect(resp_jsonData.family.pets.dog).to.have.property("name");
});

10. Проверить, что у параметра dog есть параметр age.
pm.test("Dog has a name", function () {
        pm.expect(resp_jsonData.family.pets.dog).to.have.property("age");
});


11. Проверить, что параметр name имеет значение Luky.
12. Проверить, что параметр age имеет значение 4.

var resp_dog_name = resp_jsonData.family.pets.dog.name
var resp_dog_age = resp_jsonData.family.pets.dog.age

pm.test("Dog has a name Luky - auto", function () {
        pm.expect(resp_dog_name).to.equal("Luky");
});

pm.test("Dog has 4 years old - auto", function () {
        pm.expect(resp_dog_age).to.equal(4);
});


=============================================================================
http://162.55.220.72:5005/object_info_4
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.  --- var resp_jsonData = pm.response.json();
4. Спарсить request.    
var req_json_Data = request.url;
         
5. Проверить, что name в ответе равно name s request (name забрать из request.)
6. Проверить, что age в ответе равно age из request (age забрать из request.)

var resp_json_Data = pm.response.json();
var req_json_Data = request.url;
var req_name = pm.request.url.query.toObject().name
var req_age = pm.request.url.query.toObject().age
var req_salary = pm.request.url.query.toObject().salary
var resp_name = resp_json_Data.name
var resp_age = resp_json_Data.age
var resp_salary = resp_json_Data.salary

pm.test("Name is correct - auto", function () {
    pm.expect(resp_name).to.equal(req_name);
});

pm.test("Age is correct - auto", function () {
    pm.expect(resp_age).to.equal(+req_age);
});

7. Вывести в консоль параметр salary из request.     -- console.log(req_salary)
8. Вывести в консоль параметр salary из response.    -- console.log(resp_salary)
9. Вывести в консоль 0-й элемент параметра salary из response.  -- console.log(resp_salary[0])
10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.  -- console.log(resp_salary[1])
11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.  -- console.log(resp_salary[2])
12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
pm.test("Salary[0] is correct - auto", function () {
    pm.expect(resp_salary[0]).to.equal(+req_salary);
});

13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)
pm.test("Salary[0] is correct - auto", function () {
    pm.expect(+resp_salary[1]).to.equal(req_salary*2);
});

14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)


15. Создать в окружении переменную name
16. Создать в окружении переменную age
17. Создать в окружении переменную salary

18. Передать в окружение переменную name
19. Передать в окружение переменную age
20. Передать в окружение переменную salary

pm.environment.set("name", resp_name);
pm.environment.set("age", resp_age);
pm.environment.set("salary", resp_salary);

21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary. 
for (let i = 0; i < resp_salary.length; i++){
    console.log(resp_salary[i])

};

for (item in resp_salary){
    console.log(resp_salary[item])
};

=============================================================================

http://162.55.220.72:5006/user_info_2
1. Вставить параметр salary из окружения в request
2. Вставить параметр age из окружения в age
3. Вставить параметр name из окружения в name
4. Отправить запрос.
5. Статус код 200
6. Спарсить response body в json.
7. Спарсить request.
8. Проверить, что json response имеет параметр start_qa_salary
9. Проверить, что json response имеет параметр qa_salary_after_6_months
10. Проверить, что json response имеет параметр qa_salary_after_12_months
11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
13. Проверить, что json response имеет параметр person
14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.


